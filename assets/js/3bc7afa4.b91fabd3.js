"use strict";(self.webpackChunkpop_gen_jl=self.webpackChunkpop_gen_jl||[]).push([[3628],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(t),f=r,d=m["".concat(l,".").concat(f)]||m[f]||c[f]||o;return t?a.createElement(d,i(i({ref:n},u),{},{components:t})):a.createElement(d,i({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3919:function(e,n,t){function a(e){return!0===/^(\w*:|\/\/)/.test(e)}function r(e){return void 0!==e&&!a(e)}t.d(n,{b:function(){return a},Z:function(){return r}})},4996:function(e,n,t){t.d(n,{C:function(){return o},Z:function(){return i}});var a=t(2263),r=t(3919);function o(){var e=(0,a.Z)().siteConfig,n=(e=void 0===e?{}:e).baseUrl,t=void 0===n?"/":n,o=e.url;return{withBaseUrl:function(e,n){return function(e,n,t,a){var o=void 0===a?{}:a,i=o.forcePrependBaseUrl,s=void 0!==i&&i,l=o.absolute,p=void 0!==l&&l;if(!t)return t;if(t.startsWith("#"))return t;if((0,r.b)(t))return t;if(s)return n+t;var u=t.startsWith(n)?t:n+t.replace(/^\//,"");return p?e+u:u}(o,t,e,n)}}}function i(e,n){return void 0===n&&(n={}),(0,o().withBaseUrl)(e,n)}},8215:function(e,n,t){var a=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:t,className:r},n)}},6396:function(e,n,t){t.d(n,{Z:function(){return m}});var a=t(7462),r=t(7294),o=t(2389),i=t(9443);var s=function(){var e=(0,r.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},l=t(9521),p=t(6010),u="tabItem_1uMI";function c(e){var n,t,a,o=e.lazy,i=e.block,c=e.defaultValue,m=e.values,f=e.groupId,d=e.className,g=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=m?m:g.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),v=(0,l.lx)(h,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===c?c:null!=(n=null!=c?c:null==(t=g.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(a=g[0])?void 0:a.props.value;if(null!==k&&!h.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var _=s(),N=_.tabGroupChoices,b=_.setTabGroupChoices,y=(0,r.useState)(k),F=y[0],w=y[1],P=[],C=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var j=N[f];null!=j&&j!==F&&h.some((function(e){return e.value===j}))&&w(j)}var T=function(e){var n=e.currentTarget,t=P.indexOf(n),a=h[t].value;a!==F&&(C(n),w(a),null!=f&&b(f,a))},x=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=P.indexOf(e.currentTarget)+1;t=P[a]||P[0];break;case"ArrowLeft":var r=P.indexOf(e.currentTarget)-1;t=P[r]||P[P.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:"tabs-container"},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,p.Z)("tabs",{"tabs--block":i},d)},h.map((function(e){var n=e.value,t=e.label;return r.createElement("li",{role:"tab",tabIndex:F===n?0:-1,"aria-selected":F===n,className:(0,p.Z)("tabs__item",u,{"tabs__item--active":F===n}),key:n,ref:function(e){return P.push(e)},onKeyDown:x,onFocus:T,onClick:T},null!=t?t:n)}))),o?(0,r.cloneElement)(g.filter((function(e){return e.props.value===F}))[0],{className:"margin-vert--md"}):r.createElement("div",{className:"margin-vert--md"},g.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==F})}))))}function m(e){var n=(0,o.Z)();return r.createElement(c,(0,a.Z)({key:String(n)},e))}},9443:function(e,n,t){var a=(0,t(7294).createContext)(void 0);n.Z=a},5352:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return m},default:function(){return d}});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),i=t(6396),s=t(8215),l=(t(4996),["components"]),p={id:"breedingcrosses",title:"Simulate Breeding Crosses",sidebar_label:"Breeding Crosses"},u=void 0,c={unversionedId:"simulations/breedingcrosses",id:"simulations/breedingcrosses",isDocsHomePage:!1,title:"Simulate Breeding Crosses",description:"To perfom simulations, you will need add and import the package PopGenSims.jl (available here).",source:"@site/docs/simulations/breedingcrosses.md",sourceDirName:"simulations",slug:"/simulations/breedingcrosses",permalink:"/PopGen.jl/docs/simulations/breedingcrosses",editUrl:"https://github.com/BioJulia/PopGen.jl/edit/documentation/docs/simulations/breedingcrosses.md",tags:[],version:"current",lastUpdatedAt:1635451805,formattedLastUpdatedAt:"10/28/2021",frontMatter:{id:"breedingcrosses",title:"Simulate Breeding Crosses",sidebar_label:"Breeding Crosses"},sidebar:"docs",previous:{title:"Simulating Samples",permalink:"/PopGen.jl/docs/simulations/simulate_samples"},next:{title:"Sibling Pairs",permalink:"/PopGen.jl/docs/simulations/sibship_simulations"}},m=[{value:"Perform a cross",id:"perform-a-cross",children:[{value:"Example",id:"example",children:[],level:4}],level:2},{value:"Perform a cross/backcross",id:"perform-a-crossbackcross",children:[{value:"Example",id:"example-1",children:[],level:4}],level:2},{value:"Merge results",id:"merge-results",children:[{value:"Example",id:"example-2",children:[],level:4}],level:2}],f={toc:m};function d(e){var n=e.components,t=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Requires PopGenSims.jl")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"To perfom simulations, you will need add and import the package ",(0,o.kt)("inlineCode",{parentName:"p"},"PopGenSims.jl")," (available ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/pdimens/PopGenSims.jl"},"here"),")."))),(0,o.kt)("p",null,"If you need to simulate offspring genotypes given mating between two individuals, the ",(0,o.kt)("inlineCode",{parentName:"p"},"cross()")," functions are available to simulate crosses and backcrosses."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Currently, ",(0,o.kt)("inlineCode",{parentName:"strong"},"PopGenSims.jl")," can create crosses for:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"haploids (ploidy = 1)"),(0,o.kt)("li",{parentName:"ul"},"diploids (ploidy = 2)"),(0,o.kt)("li",{parentName:"ul"},"tetraploids (ploidy = 4)"),(0,o.kt)("li",{parentName:"ul"},"hexaploids (ploidy = 6)"),(0,o.kt)("li",{parentName:"ul"},"octaploids (ploidy = 8)")),(0,o.kt)("h2",{id:"perform-a-cross"},"Perform a cross"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},"cross(::PopData, parent1::String, parent2::String; n::Int, generation::String)\n")),(0,o.kt)("p",null,"The cross function performs a simple parental cross from individuals ",(0,o.kt)("inlineCode",{parentName:"p"},"parent1")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"parent2")," in the same PopData object. The parents are strings of the names of the parents in the PopData. The keyword argument ",(0,o.kt)("inlineCode",{parentName:"p"},"n")," is the number of offspring to produce, and ",(0,o.kt)("inlineCode",{parentName:"p"},"generation")," is a keyword argument for the population name to the assign the offspring (default: ",(0,o.kt)("inlineCode",{parentName:"p"},'"F1"'),")."),(0,o.kt)("h4",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},'julia> cats = @nancycats;\n\njulia> f1 = cross(cats, "N111", "N107", n = 100000)\nPopData{Diploid, 9 Microsatellite loci}\n  Samples: 100000\n  Populations: 1\n')),(0,o.kt)("p",null,"Here is a look at the resulting ",(0,o.kt)("inlineCode",{parentName:"p"},"PopData")),(0,o.kt)(i.Z,{block:!0,defaultValue:"meta",values:[{label:"meta",value:"meta"},{label:"loci",value:"loci"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"meta",mdxType:"TabItem"},(0,o.kt)("p",null,"There are two things that should jump out at you:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The ",(0,o.kt)("inlineCode",{parentName:"li"},"name")," of offspring are prepended with ",(0,o.kt)("inlineCode",{parentName:"li"},"generation")," and the ",(0,o.kt)("inlineCode",{parentName:"li"},"population")," is the ",(0,o.kt)("inlineCode",{parentName:"li"},"generation"),"."),(0,o.kt)("li",{parentName:"ol"},"There is a never-before-seen ",(0,o.kt)("inlineCode",{parentName:"li"},"parents")," column. This column exists for better record keeping of who has what parents if you are performing multiple crosses.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'julia> f1.sampleinfo\n100000\xd76 DataFrame\n\u2502 Row    \u2502 name                \u2502 ploidy \u2502 population \u2502 parents          \u2502\n\u2502        \u2502 String              \u2502 Int8   \u2502 String     \u2502 Tuple\u2026           \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1      \u2502 F1_offspring_1      \u2502 2      \u2502 F1         \u2502 ("N111", "N107") \u2502\n\u2502 2      \u2502 F1_offspring_2      \u2502 2      \u2502 F1         \u2502 ("N111", "N107") \u2502\n\u2502 3      \u2502 F1_offspring_3      \u2502 2      \u2502 F1         \u2502 ("N111", "N107") \u2502\n\u2502 4      \u2502 F1_offspring_4      \u2502 2      \u2502 F1         \u2502 ("N111", "N107") \u2502\n\u2502 5      \u2502 F1_offspring_5      \u2502 2      \u2502 F1         \u2502 ("N111", "N107") \u2502\n\u22ee\n\u2502 99995  \u2502 F1_offspring_99995  \u2502 2      \u2502 F1         \u2502 ("N111", "N107") \u2502\n\u2502 99996  \u2502 F1_offspring_99996  \u2502 2      \u2502 F1         \u2502 ("N111", "N107") \u2502\n\u2502 99997  \u2502 F1_offspring_99997  \u2502 2      \u2502 F1         \u2502 ("N111", "N107") \u2502\n\u2502 99998  \u2502 F1_offspring_99998  \u2502 2      \u2502 F1         \u2502 ("N111", "N107") \u2502\n\u2502 99999  \u2502 F1_offspring_99999  \u2502 2      \u2502 F1         \u2502 ("N111", "N107") \u2502\n\u2502 100000 \u2502 F1_offspring_100000 \u2502 2      \u2502 F1         \u2502 ("N111", "N107") \u2502\n'))),(0,o.kt)(s.Z,{value:"loci",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"julia> f1.genodata\n900000\xd74 DataFrame\n\u2502 Row    \u2502 name                \u2502 population \u2502 locus  \u2502 genotype   \u2502\n\u2502        \u2502 String              \u2502 String     \u2502 String \u2502 Tuple\u2026?    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1      \u2502 F1_offspring_1      \u2502 F1         \u2502 fca8   \u2502 (135, 135) \u2502\n\u2502 2      \u2502 F1_offspring_1      \u2502 F1         \u2502 fca23  \u2502 (146, 132) \u2502\n\u2502 3      \u2502 F1_offspring_1      \u2502 F1         \u2502 fca43  \u2502 (139, 145) \u2502\n\u2502 4      \u2502 F1_offspring_1      \u2502 F1         \u2502 fca45  \u2502 (132, 122) \u2502\n\u2502 5      \u2502 F1_offspring_1      \u2502 F1         \u2502 fca77  \u2502 (158, 150) \u2502\n\u22ee\n\u2502 899995 \u2502 F1_offspring_100000 \u2502 F1         \u2502 fca45  \u2502 (122, 128) \u2502\n\u2502 899996 \u2502 F1_offspring_100000 \u2502 F1         \u2502 fca77  \u2502 (158, 150) \u2502\n\u2502 899997 \u2502 F1_offspring_100000 \u2502 F1         \u2502 fca78  \u2502 (142, 150) \u2502\n\u2502 899998 \u2502 F1_offspring_100000 \u2502 F1         \u2502 fca90  \u2502 (201, 199) \u2502\n\u2502 899999 \u2502 F1_offspring_100000 \u2502 F1         \u2502 fca96  \u2502 (113, 103) \u2502\n\u2502 900000 \u2502 F1_offspring_100000 \u2502 F1         \u2502 fca37  \u2502 (214, 208) \u2502\n")))),(0,o.kt)("h2",{id:"perform-a-crossbackcross"},"Perform a cross/backcross"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},'cross(PopData => "Parent1Name", PopData => "Parent2Name", n::Int, generation::String)\n')),(0,o.kt)("p",null,"This syntax uses the ",(0,o.kt)("inlineCode",{parentName:"p"},"Pair")," notation of ",(0,o.kt)("inlineCode",{parentName:"p"},'PopData => "Parent"')," to specify inputs. This method can be used for performing a cross like above, with the flexibility of parents allowed from two different ",(0,o.kt)("inlineCode",{parentName:"p"},"PopData")," objects, which makes backcrosses possible. The keyword argument ",(0,o.kt)("inlineCode",{parentName:"p"},"n")," is the number of offspring to produce, and ",(0,o.kt)("inlineCode",{parentName:"p"},"generation")," is a keyword argument for the population name to the assign the offspring (default: ",(0,o.kt)("inlineCode",{parentName:"p"},'"F1"'),")."),(0,o.kt)("h4",{id:"example-1"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},'julia> f2_backcross = cross(cats => "N111", f1 => "F1_offspring_99", n = 100000, generation = "F2_manycats")\nPopData{Diploid, 9 Microsatellite loci}\n  Samples: 100000\n  Populations: 1\n')),(0,o.kt)("p",null,"And here you can see that ",(0,o.kt)("inlineCode",{parentName:"p"},"generation")," was again prepended to each offspring ",(0,o.kt)("inlineCode",{parentName:"p"},"name"),", along with assigned to the ",(0,o.kt)("inlineCode",{parentName:"p"},"population")," for each."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'julia> f2_backcross.sampleinfo\n100000\xd76 DataFrame\n\u2502 Row    \u2502 name                         \u2502 ploidy \u2502 population  \u2502 parents                     \u2502\n\u2502        \u2502 String                       \u2502 Int8   \u2502 String      \u2502 Tuple{String,String}        \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 1      \u2502 F2_manycats_offspring_1      \u2502 2      \u2502 F2_manycats \u2502 ("N111", "F1_offspring_99") \u2502\n\u2502 2      \u2502 F2_manycats_offspring_2      \u2502 2      \u2502 F2_manycats \u2502 ("N111", "F1_offspring_99") \u2502\n\u2502 3      \u2502 F2_manycats_offspring_3      \u2502 2      \u2502 F2_manycats \u2502 ("N111", "F1_offspring_99") \u2502\n\u2502 4      \u2502 F2_manycats_offspring_4      \u2502 2      \u2502 F2_manycats \u2502 ("N111", "F1_offspring_99") \u2502\n\u2502 5      \u2502 F2_manycats_offspring_5      \u2502 2      \u2502 F2_manycats \u2502 ("N111", "F1_offspring_99") \u2502\n\u22ee\n\u2502 99995  \u2502 F2_manycats_offspring_99995  \u2502 2      \u2502 F2_manycats \u2502 ("N111", "F1_offspring_99") \u2502\n\u2502 99996  \u2502 F2_manycats_offspring_99996  \u2502 2      \u2502 F2_manycats \u2502 ("N111", "F1_offspring_99") \u2502\n\u2502 99997  \u2502 F2_manycats_offspring_99997  \u2502 2      \u2502 F2_manycats \u2502 ("N111", "F1_offspring_99") \u2502\n\u2502 99998  \u2502 F2_manycats_offspring_99998  \u2502 2      \u2502 F2_manycats \u2502 ("N111", "F1_offspring_99") \u2502\n\u2502 99999  \u2502 F2_manycats_offspring_99999  \u2502 2      \u2502 F2_manycats \u2502 ("N111", "F1_offspring_99") \u2502\n\u2502 100000 \u2502 F2_manycats_offspring_100000 \u2502 2      \u2502 F2_manycats \u2502 ("N111", "F1_offspring_99") \u2502\n')),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"When crossing parents from different ",(0,o.kt)("inlineCode",{parentName:"p"},"PopData"),", the parents must have the same loci. You will see error messages if they don't."))),(0,o.kt)("h2",{id:"merge-results"},"Merge results"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"PopData")," generated from breeding crosses can be combined used ",(0,o.kt)("inlineCode",{parentName:"p"},"append")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"append!")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},"append(::PopData, ::PopData)\nappend!(::PopData, ::PopData)\n")),(0,o.kt)("p",null,"These methods use outer joins and the ",(0,o.kt)("inlineCode",{parentName:"p"},"PopData")," you are combining must have the same loci."),(0,o.kt)("h4",{id:"example-2"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},"# non mutating\ncrossed_sims = append(f1, f2_backcross)\n\n# mutating\nappend!(f1, f2_backcross)\n")))}d.isMDXComponent=!0}}]);