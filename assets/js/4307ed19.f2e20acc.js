"use strict";(self.webpackChunkpop_gen_jl=self.webpackChunkpop_gen_jl||[]).push([[4801],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return c}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),c=i,h=u["".concat(s,".").concat(c)]||u[c]||m[c]||r;return n?a.createElement(h,o(o({ref:t},d),{},{components:n})):a.createElement(h,o({ref:t},d))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return o}});var a=n(7294),i=n(6010),r="tabItem_Ymn6";function o(e){var t=e.children,n=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(r,o),hidden:n},t)}},5488:function(e,t,n){n.d(t,{Z:function(){return c}});var a=n(7462),i=n(7294),r=n(6010),o=n(2389),l=n(7392),s=n(7094),p=n(2466),d="tabList__CuJ",m="tabItem_LNqP";function u(e){var t,n,o=e.lazy,u=e.block,c=e.defaultValue,h=e.values,k=e.groupId,f=e.className,g=i.Children.map(e.children,(function(e){if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),N=null!=h?h:g.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),b=(0,l.l)(N,(function(e,t){return e.value===t.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===c?c:null!=(t=null!=c?c:null==(n=g.find((function(e){return e.props.default})))?void 0:n.props.value)?t:g[0].props.value;if(null!==y&&!N.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+N.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=(0,s.U)(),w=v.tabGroupChoices,C=v.setTabGroupChoices,j=(0,i.useState)(y),T=j[0],x=j[1],A=[],P=(0,p.o5)().blockElementScrollPositionUntilNextRender;if(null!=k){var D=w[k];null!=D&&D!==T&&N.some((function(e){return e.value===D}))&&x(D)}var F=function(e){var t=e.currentTarget,n=A.indexOf(t),a=N[n].value;a!==T&&(P(t),x(a),null!=k&&C(k,String(a)))},M=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a,i=A.indexOf(e.currentTarget)+1;n=null!=(a=A[i])?a:A[0];break;case"ArrowLeft":var r,o=A.indexOf(e.currentTarget)-1;n=null!=(r=A[o])?r:A[A.length-1]}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,r.Z)("tabs-container",d)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":u},f)},N.map((function(e){var t=e.value,n=e.label,o=e.attributes;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,key:t,ref:function(e){return A.push(e)},onKeyDown:M,onFocus:F,onClick:F},o,{className:(0,r.Z)("tabs__item",m,null==o?void 0:o.className,{"tabs__item--active":T===t})}),null!=n?n:t)}))),o?(0,i.cloneElement)(g.filter((function(e){return e.props.value===T}))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},g.map((function(e,t){return(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}function c(e){var t=(0,o.Z)();return i.createElement(u,(0,a.Z)({key:String(t)},e))}},4513:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return m},default:function(){return f},frontMatter:function(){return d},metadata:function(){return u},toc:function(){return h}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=n(5488),l=n(5162),s=n(4996),p=["components"],d={id:"kinship",title:"Kinship",sidebar_label:"Kinship"},m=void 0,u={unversionedId:"analyses/kinship",id:"analyses/kinship",title:"Kinship",description:"Background",source:"@site/docs/analyses/kinship.md",sourceDirName:"analyses",slug:"/analyses/kinship",permalink:"/PopGen.jl/docs/analyses/kinship",draft:!1,editUrl:"https://github.com/BioJulia/PopGen.jl/edit/documentation/docs/analyses/kinship.md",tags:[],version:"current",lastUpdatedAt:1659105627,formattedLastUpdatedAt:"Jul 29, 2022",frontMatter:{id:"kinship",title:"Kinship",sidebar_label:"Kinship"},sidebar:"docs",previous:{title:"Principal Component Analysis",permalink:"/PopGen.jl/docs/analyses/pca"},next:{title:"t-SNE",permalink:"/PopGen.jl/docs/analyses/tsne"}},c={},h=[{value:"Background",id:"background",level:2},{value:"Calculate Relatedness",id:"calculate-relatedness",level:2},{value:"Arguments",id:"arguments",level:4},{value:"Keyword Arguments",id:"keyword-arguments",level:4},{value:"Arguments",id:"arguments-1",level:4},{value:"Keyword Arguments",id:"keyword-arguments-1",level:4},{value:"Methods",id:"methods",level:3},{value:"Posthoc analyses",id:"posthoc-analyses",level:2},{value:"Arguments",id:"arguments-2",level:4},{value:"Keyword Arguments",id:"keyword-arguments-2",level:4},{value:"Acknowledgements",id:"acknowledgements",level:2}],k={toc:h};function f(e){var t=e.components,d=(0,i.Z)(e,p);return(0,r.kt)("wrapper",(0,a.Z)({},k,d,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("link",{rel:"stylesheet",href:(0,s.Z)("katex/katex.min.css")}),(0,r.kt)("h2",{id:"background"},"Background"),(0,r.kt)("p",null,"Sometimes you want or need to know the relatedness of individuals in a sample. Relatedness is exactly what its name implies: how related individuals are given some provided genetic information (e.g. full siblings, half siblings, etc.). Relatedness can be used in quantitative genetics to estimate heritability, additive genetic variances, and covariances. It can also be used in population genetics to study isolation-by-distance or population structure."),(0,r.kt)("p",null,'The goal of calculating relatedness from molecular markers is to accurately estimate the proportion of the genome which is identical by descent between two individuals. With a pedigree this is "relatively" straightforward. However, for large, natural, populations pedigrees tend not to exist and some brilliant minds have developed various equations to estimate the relatedness from a set of molecular markers. Given two diploid individuals, there are 9 "identity by descent" models available between them (',(0,r.kt)("a",{parentName:"p",href:"https://www.springer.com/gp/book/9783642884177"},"Jacquard 1975"),", paywall), as shown below (from ",(0,r.kt)("a",{parentName:"p",href:"https://www.genetics.org/content/163/3/1153.full"},"Milligan 2003"),"):"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Jacquard IBD",src:n(7173).Z,width:"1800",height:"784"})),(0,r.kt)("p",null,"Broadly speaking there are two different ways of estimating genetic relatedness using molecular markers: methods of moments, and likelihood estimators. Generally, moments estimators will be faster but aren't constrained to being between the theoretical minimum and maximum values of 0 and 1. The likelihood estimators use likelihood functions derived from the set of Jacquard Identity States (above) to determine the most likely inheritance pattern. One difference between the two classes is (generally) moments estimators require an assumption of no inbreeding, while that assumption isn't necessarily required for likelihood estimators (though it does simplify the math). It is increasingly common to use multiple estimators on pairs, simulated from your molecular markers, with known relationships to determine the most appropriate estimator to use with your data."),(0,r.kt)("p",null,"PopGen.jl implements a wide variety of moments-based estimators: Blouin, Li & Horvitz, Loiselle, Lynch, Lynch/Li, Lynch & Ritland, Moran, Queller & Goodnight, Ritland, and Wang. Along with these, we provide an option to estimate mean, median, standard error, and confidence intervals using bootstrapping. Have a look at ",(0,r.kt)("a",{parentName:"p",href:"/blog/relatedness"},"the guide")," we provide detailing how to perform a basic relatedness analysis."),(0,r.kt)("admonition",{title:"A note about removing kin",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"There are reasons for removing kin in population genetics datasets. For one, there are no siblings/kin or mixed-generations in a Hardy-Weinberg Equilibrium population, and the inclusion of siblings/kin in analyses that rely on HWE assumptions ","[technically]"," violate those assumptions. However, there are also arguments to keep kin/siblings in your data, those data are important for effective population size, linkage disequilibrium, etc. "),(0,r.kt)("p",{parentName:"admonition"},"see  ",(0,r.kt)("a",{parentName:"p",href:"https://onlinelibrary.wiley.com/doi/full/10.1111/mec.14022"},"Waples and Anderson (2017)"))),(0,r.kt)("h2",{id:"calculate-relatedness"},"Calculate Relatedness"),(0,r.kt)("p",null,"There are two main methods of calculating pairwise relatedness, an all x all comparison of an entire PopData object or an all x all comparison\nfor a subset of individuals in a PopData object. Regardless of which you prefer, they can be perfomed without bootstrapping, returning a\n",(0,r.kt)("inlineCode",{parentName:"p"},"NamedMatrix"),", or with bootstrapping, returning a ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame"),". ",(0,r.kt)("strong",{parentName:"p"},"Neither method estimates self-relatedness, so the diagonals of the NamedMatrix should be ignored.")," The resulting ",(0,r.kt)("inlineCode",{parentName:"p"},"NamedMatrix")," can be converted to a ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame")," using ",(0,r.kt)("inlineCode",{parentName:"p"},"kinshiptotable()"),"."),(0,r.kt)(o.Z,{block:!0,defaultValue:"a",values:[{label:"All vs. All",value:"a"},{label:"Specific Samples",value:"s"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"a",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},"kinship(data::PopData; kwargs...)\n")),(0,r.kt)("p",null,"Calculate pairwise relatedness estimates for all individuals in a ",(0,r.kt)("inlineCode",{parentName:"p"},"PopData")," object using\nthe specified ",(0,r.kt)("inlineCode",{parentName:"p"},"method")," (see below). Returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"NamedMatrix")," if not performing bootstrapping, otherwise returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame")," (since bootstrapping provides more output information). To calculate means, median, standard error, and confidence intervals using bootstrapping,\nset ",(0,r.kt)("inlineCode",{parentName:"p"},"iterations = n")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," is an integer greater than ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," (the default) corresponding to the number\nof bootstrap iterations you wish to perform for each pair. The default confidence interval is ",(0,r.kt)("inlineCode",{parentName:"p"},"[0.0275, 0.975]")," (i.e. 95%), however that can be changed by supplying a ",(0,r.kt)("inlineCode",{parentName:"p"},"Vector{Float64}")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"[low, high]")," to the keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"interval"),". ",(0,r.kt)("strong",{parentName:"p"},"Note:")," samples must be diploid."),(0,r.kt)("h4",{id:"arguments"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data")," : A PopData object")),(0,r.kt)("h4",{id:"keyword-arguments"},"Keyword Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"method::Function")," : A method function (see below)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"iterations::Int64")," : The number of iterations to perform bootstrapping (default: ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),", will not perform bootstrapping)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"interval::Vector{Float64}")," : A Vector of ","[low, high]"," indicating the confidence intervals you would like for bootstrapping (default: ",(0,r.kt)("inlineCode",{parentName:"li"},"[0.275, 0.975]"),", i.e. 95%)")),(0,r.kt)(o.Z,{block:!0,defaultValue:"wo",values:[{label:"Without Bootstrapping",value:"wo"},{label:"With Bootstrapping",value:"b"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"wo",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},"julia> cats = @nancycats ; \n\njulia> kin = kinship(cats, method = Moran)\n237\xd7237 Named Matrix{Float64}\nA \u2572 B \u2502         N215          N216  \u2026          N289          N290\n\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nN215  \u2502 8.13724e-316       1.62338  \u2026       1.04589       1.15351\nN216  \u2502      1.62338       0.29485         0.957724        1.1637\nN217  \u2502     0.673577      0.587163         0.547427      0.709887\nN218  \u2502     0.896935       0.72942         0.919448      0.791255\n\u22ee                  \u22ee             \u22ee  \u22f1             \u22ee             \u22ee\nN297  \u2502     0.757915      0.858834          1.15432        1.2677\nN281  \u2502     0.686057      0.604236         0.942749       1.08762\nN289  \u2502      1.04589      0.957724              0.0         1.104\nN290  \u2502      1.15351        1.1637  \u2026         1.104           0.0\n"))),(0,r.kt)(l.Z,{value:"b",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},"julia> cats = @nancycats ; \n\njulia> kinship_new(cats, method = Moran, iterations = 100)\n27966\xd77 DataFrame\n   Row \u2502 sample1  sample2  Moran     bootmean  std       CI_lower      CI_upper \n       \u2502 String   String   Float64   Float64   Float64   Float64       Float64  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n     1 \u2502 N215     N216     1.62338   0.376626  0.27286    0.00274863   0.916719\n     2 \u2502 N215     N217     0.673577  0.202888  0.20094    0.00105976   0.59871\n     3 \u2502 N215     N218     0.896935  0.206272  0.232048   7.58373e-5   0.786113\n     4 \u2502 N215     N219     0.988931  0.236503  0.221345  -0.00053018   0.718204\n   \u22ee   \u2502    \u22ee        \u22ee        \u22ee         \u22ee         \u22ee           \u22ee           \u22ee\n 27964 \u2502 N281     N289     0.942749  0.220475  0.200358   0.001656     0.799307\n 27965 \u2502 N281     N290     1.08762   0.285053  0.289967   0.000299019  1.09343\n 27966 \u2502 N289     N290     1.104     0.277445  0.235519   0.00186445   0.858206\n                                                              27959 rows omitted\n"))))),(0,r.kt)(l.Z,{value:"s",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},"kinship(data::PopData, sample_names::Vector{AbstractString}; kwargs...)\n")),(0,r.kt)("p",null,"Calculate pairwise relatedness estimates for all pairs of the supplied sample names in a ",(0,r.kt)("inlineCode",{parentName:"p"},"PopData")," object using\nthe specified ",(0,r.kt)("inlineCode",{parentName:"p"},"method")," (see below). Returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"NamedMatrix")," if not performing bootstrapping, otherwise returns a ",(0,r.kt)("inlineCode",{parentName:"p"},"DataFrame")," (since bootstrapping provides more output information). To calculate means, median, standard error, and confidence intervals using bootstrapping,\nset ",(0,r.kt)("inlineCode",{parentName:"p"},"iterations = n")," where ",(0,r.kt)("inlineCode",{parentName:"p"},"n")," is an integer greater than ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," (the default) corresponding to the number\nof bootstrap iterations you wish to perform for each pair. The default confidence interval is ",(0,r.kt)("inlineCode",{parentName:"p"},"[0.0275, 0.975]")," (i.e. 95%),\nhowever that can be changed by supplying a ",(0,r.kt)("inlineCode",{parentName:"p"},"Vector{Float64}")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"[low, high]")," to the keyword ",(0,r.kt)("inlineCode",{parentName:"p"},"interval"),".\n",(0,r.kt)("strong",{parentName:"p"},"Note:")," samples must be diploid."),(0,r.kt)("h4",{id:"arguments-1"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data")," : A PopData object"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"sample_names")," : A list of samples names to calculate relatedness for")),(0,r.kt)("h4",{id:"keyword-arguments-1"},"Keyword Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"method::Function")," : A method function or vector of method functions (see below)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"iterations::Int64")," : The number of iterations to perform bootstrapping (default: ",(0,r.kt)("inlineCode",{parentName:"li"},"0"),", will not perform bootstrapping)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"interval::Vector{Float64}")," : A Vector of ","[low, high]"," indicating the confidence intervals you would like for bootstrapping (default: ",(0,r.kt)("inlineCode",{parentName:"li"},"[0.0275, 0.975]"),", i.e. 95%)")),(0,r.kt)(o.Z,{block:!0,defaultValue:"wo",values:[{label:"Without Bootstrapping",value:"wo"},{label:"With Bootstrapping",value:"b"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"wo",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},"julia> cats = @nancycats ; \n\njulia> kin = kinship(cats, samplenames(cats)[1:10], method = Moran) ;\n10\xd710 Named Matrix{Float64}\nA \u2572 B \u2502         N215          N216  \u2026          N223          N224\n\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nN215  \u2502     5.0e-323       2.40275  \u2026       1.28205      0.793651\nN216  \u2502      2.40275      5.0e-324          1.16525       1.03383\nN217  \u2502     0.860832      0.755287         0.938453      0.543519\nN218  \u2502      1.17754      0.967118         0.824974       1.00656\nN219  \u2502      1.36268       1.80995         0.760537       0.96706\nN220  \u2502      1.47059       1.84275         0.735041       1.39631\nN221  \u2502      2.03837       1.96335          1.11537       1.14702\nN222  \u2502     0.657895      0.804829          0.78841      0.905063\nN223  \u2502      1.28205       1.16525         5.0e-324      0.654129\nN224  \u2502     0.793651       1.03383  \u2026      0.654129  6.93947e-310\n"))),(0,r.kt)(l.Z,{value:"b",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},"julia> cats = @nancycats ; \n\njulia> kin = kinship(cats, samplenames(cats)[1:10], method = Moran, iteratons = 100)\n45\xd77 DataFrame\n Row \u2502 sample1  sample2  Moran     bootmean   std       CI_lower      CI_upper \n     \u2502 String   String   Float64   Float64    Float64   Float64       Float64  \n\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1 \u2502 N215     N216     2.40275   0.166804   0.192498  -0.00103402   0.558154\n   2 \u2502 N215     N217     0.860832  0.132997   0.157386   0.00079658   0.500806\n   3 \u2502 N215     N218     1.17754   0.138991   0.193997   0.00178298   0.620476\n   4 \u2502 N215     N219     1.36268   0.118936   0.169152   0.000739799  0.527514\n  \u22ee  \u2502    \u22ee        \u22ee        \u22ee          \u22ee         \u22ee           \u22ee           \u22ee\n  43 \u2502 N222     N223     0.78841   0.0947265  0.1087    -0.000671851  0.316755\n  44 \u2502 N222     N224     0.905063  0.121569   0.125794   0.000570054  0.387836\n  45 \u2502 N223     N224     0.654129  0.0729529  0.121482   0.00105724   0.403654\n                                                                38 rows omitted\n")))))),(0,r.kt)("h3",{id:"methods"},"Methods"),(0,r.kt)("p",null,"There are several estimators available and are listed below. ",(0,r.kt)("inlineCode",{parentName:"p"},"kinship")," takes the\nfunction names as arguments (",(0,r.kt)("strong",{parentName:"p"},"case sensitive"),"), therefore do not use quotes or colons\nin specifying the methods."),(0,r.kt)("admonition",{title:"autocompletion",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Since the methods correspond to function names, they will tab-autocomplete when\ninputting them. For more information on a specific method, please see the respective docstring (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"?Loiselle"),").")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Method"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Method Call"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://onlinelibrary.wiley.com/doi/10.1046/j.1365-294X.1996.00094.x"},"Blouin 1996")),(0,r.kt)("td",{parentName:"tr",align:"left"},"moments-based"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Blouin"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC1716461/"},"Li & Horvitz 1953")),(0,r.kt)("td",{parentName:"tr",align:"left"},"moments-based"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LiHorvitz"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://bsapubs.onlinelibrary.wiley.com/doi/abs/10.1002/j.1537-2197.1995.tb12679.x"},"Loiselle 1995")),(0,r.kt)("td",{parentName:"tr",align:"left"},"moments-based"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Loiselle"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://pubmed.ncbi.nlm.nih.gov/3193879/"},"Lynch 1988")),(0,r.kt)("td",{parentName:"tr",align:"left"},"moments-based"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Lynch"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://pubmed.ncbi.nlm.nih.gov/8514326/"},"Lynch/Li 1993")),(0,r.kt)("td",{parentName:"tr",align:"left"},"moments-based"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LynchLi"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://www.genetics.org/content/152/4/1753.short"},"Lynch & Ritland 1999")),(0,r.kt)("td",{parentName:"tr",align:"left"},"moments-based"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"LynchRitland"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://www.jstor.org/stable/2332142?origin=crossref&seq=1#metadata_info_tab_contents"},"Moran 1950")),(0,r.kt)("td",{parentName:"tr",align:"left"},"moments-based"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Moran"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1558-5646.1989.tb04226.x"},"Queller & Goodnight 1989")),(0,r.kt)("td",{parentName:"tr",align:"left"},"moments-based"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"QuellerGoodnight"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1558-5646.1996.tb02347.x"},"Ritland 1996")),(0,r.kt)("td",{parentName:"tr",align:"left"},"moments-based"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Ritland"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://pubmed.ncbi.nlm.nih.gov/12663552/"},"Milligan 2003"),' "DyadML"'),(0,r.kt)("td",{parentName:"tr",align:"left"},"maximum-likelihood"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incomplete*")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"https://www.genetics.org/content/160/3/1203.short"},"Wang 2002")),(0,r.kt)("td",{parentName:"tr",align:"left"},"moments-based"),(0,r.kt)("td",{parentName:"tr",align:"left"},"incomplete*")))),(0,r.kt)("admonition",{title:"*more kinship estimators",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Contact us or submit a pull request if you're interested in contributing to the kinship methods. DyadML and Wang (2002) estimators are currently incomplete and the others\ncould use some optimizations. More help is always welcomed! Our wishlist also includes the KING method \ud83d\ude04")),(0,r.kt)("h2",{id:"posthoc-analyses"},"Posthoc analyses"),(0,r.kt)("p",null,"There are several different kinds of things you can do with kinship information (e.g. network analysis), and one that's provided is lovingly\ncalled ",(0,r.kt)("inlineCode",{parentName:"p"},"kinshipposthoc()"),", which performs a permutation analysis to\ntest if within-population relatedness is significantly greater than between-population relatedness for each population. We recommend that you\ncorrect for multiple testing using ",(0,r.kt)("inlineCode",{parentName:"p"},"MultipleTesting.jl"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},"kinshipposthoc(data::PopData, results::Union{DataFrame, NamedTuple}; iterations::Int)\n")),(0,r.kt)("h4",{id:"arguments-2"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data")," : A PopData object"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"results")," : the DataFrame or NamedTuple results from ",(0,r.kt)("inlineCode",{parentName:"li"},"kinship()"))),(0,r.kt)("h4",{id:"keyword-arguments-2"},"Keyword Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"iterations")," : number of iterations for the permutation tests (default: ",(0,r.kt)("inlineCode",{parentName:"li"},"20000"),")")),(0,r.kt)("admonition",{title:"not a great name",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},'We admit "kinshipposthoc" is not a great name for this function. Please\ncontact us with better ideas! \ud83d\ude01')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"julia> cats = @nancycats ;\n\njulia> rel_out = kinship(cats, method = [Ritland, Moran], iterations = 100);\n\njulia> kinshipposthoc(cats, rel_out)\n17x3 DataFrame\n Row \u2502 population  Ritland_P  Moran_P\n     \u2502 String      Float64    Float64\n\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1 \u2502 1              5.0e-5   5.0e-5\n   2 \u2502 2              5.0e-5   5.0e-5\n   3 \u2502 3              5.0e-5   5.0e-5\n   4 \u2502 4              5.0e-5   5.0e-5\n   5 \u2502 5              5.0e-5   5.0e-5\n   6 \u2502 6              5.0e-5   5.0e-5\n   7 \u2502 7              5.0e-5   5.0e-5\n   8 \u2502 8              5.0e-5   5.0e-5\n   9 \u2502 9              5.0e-5   5.0e-5\n  10 \u2502 10             5.0e-5   5.0e-5\n  11 \u2502 11             5.0e-5   5.0e-5\n  12 \u2502 12             5.0e-5   5.0e-5\n  13 \u2502 13             5.0e-5   5.0e-5\n  14 \u2502 14             5.0e-5   5.0e-5\n  15 \u2502 15             5.0e-5   5.0e-5\n  16 \u2502 16             5.0e-5   5.0e-5\n  17 \u2502 17             5.0e-5   5.0e-5\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"acknowledgements"},"Acknowledgements"),(0,r.kt)("p",null,"The kinship methods were dutifully written and verified against R analogues by Jason Selwyn. They have since been rewritten twice for speed and memory optimization (14mb vs 14gb!). These anaylses can take a while, especially if performing bootstrapping; we provide a progress bar via ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/FedeClaudi/Term.jl"},"Term.jl")," so you can move on and focus on other things in the meantime."))}f.isMDXComponent=!0},7173:function(e,t,n){t.Z=n.p+"assets/images/jacquard_identitiies-dd9e2b1bc1f371819ea078c6ad3fc86c.jpg"}}]);