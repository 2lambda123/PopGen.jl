"use strict";(self.webpackChunkpop_gen_jl=self.webpackChunkpop_gen_jl||[]).push([[7931],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return f}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var u=n.createContext({}),c=function(e){var t=n.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},s=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(a),m=r,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return a?n.createElement(f,i(i({ref:t},s),{},{components:a})):n.createElement(f,i({ref:t},s))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:function(e,t,a){a.d(t,{Z:function(){return i}});var n=a(7294),r=a(6010),o={tabItem:"tabItem_Ymn6"};function i(e){var t=e.children,a=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,i),hidden:a},t)}},4866:function(e,t,a){a.d(t,{Z:function(){return w}});var n=a(7462),r=a(7294),o=a(6010),i=a(2466),l=a(6550),u=a(1980),c=a(7392),s=a(12);function d(e){return function(e){var t,a;return null!=(t=null==(a=r.Children.map(e,(function(e){if(!e||(0,r.isValidElement)(e)&&(t=e.props)&&"object"==typeof t&&"value"in t)return e;var t;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:a.filter(Boolean))?t:[]}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function p(e){var t=e.values,a=e.children;return(0,r.useMemo)((function(){var e=null!=t?t:d(a);return function(e){var t=(0,c.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,a])}function m(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId,o=(0,l.k6)(),i=function(e){var t=e.queryString,a=void 0!==t&&t,n=e.groupId;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:a,groupId:n});return[(0,u._X)(i),(0,r.useCallback)((function(e){if(i){var t=new URLSearchParams(o.location.search);t.set(i,e),o.replace(Object.assign({},o.location,{search:t.toString()}))}}),[i,o])]}function g(e){var t,a,n,o,i=e.defaultValue,l=e.queryString,u=void 0!==l&&l,c=e.groupId,d=p(e),g=(0,r.useState)((function(){return function(e){var t,a=e.defaultValue,n=e.tabValues;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!m({value:a,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+a+'" but none of its children has the corresponding value. Available values are: '+n.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return a}var r=null!=(t=n.find((function(e){return e.default})))?t:n[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:i,tabValues:d})})),h=g[0],v=g[1],b=f({queryString:u,groupId:c}),k=b[0],y=b[1],w=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:c}.groupId),a=(0,s.Nk)(t),n=a[0],o=a[1],[n,(0,r.useCallback)((function(e){t&&o.set(e)}),[t,o])]),N=w[0],C=w[1],j=function(){var e=null!=k?k:N;return m({value:e,tabValues:d})?e:null}();return(0,r.useLayoutEffect)((function(){j&&v(j)}),[j]),{selectedValue:h,selectValue:(0,r.useCallback)((function(e){if(!m({value:e,tabValues:d}))throw new Error("Can't select invalid tab value="+e);v(e),y(e),C(e)}),[y,C,d]),tabValues:d}}var h=a(2389),v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){var t=e.className,a=e.block,l=e.selectedValue,u=e.selectValue,c=e.tabValues,s=[],d=(0,i.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var t=e.currentTarget,a=s.indexOf(t),n=c[a].value;n!==l&&(d(t),u(n))},m=function(e){var t,a=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var n,r=s.indexOf(e.currentTarget)+1;a=null!=(n=s[r])?n:s[0];break;case"ArrowLeft":var o,i=s.indexOf(e.currentTarget)-1;a=null!=(o=s[i])?o:s[s.length-1]}null==(t=a)||t.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},c.map((function(e){var t=e.value,a=e.label,i=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:function(e){return s.push(e)},onKeyDown:m,onClick:p},i,{className:(0,o.Z)("tabs__item",v.tabItem,null==i?void 0:i.className,{"tabs__item--active":l===t})}),null!=a?a:t)})))}function k(e){var t=e.lazy,a=e.children,n=e.selectedValue,o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){var i=o.find((function(e){return e.props.value===n}));return i?(0,r.cloneElement)(i,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},o.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n})})))}function y(e){var t=g(e);return r.createElement("div",{className:(0,o.Z)("tabs-container",v.tabList)},r.createElement(b,(0,n.Z)({},e,t)),r.createElement(k,(0,n.Z)({},e,t)))}function w(e){var t=(0,h.Z)();return r.createElement(y,(0,n.Z)({key:String(t)},e))}},4966:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return d}});var n=a(7462),r=a(3366),o=(a(7294),a(3905)),i=(a(4866),a(5162),["components"]),l={id:"locationdata",title:"Location data",sidebar_label:"Location data"},u=void 0,c={unversionedId:"popdata/locationdata",id:"popdata/locationdata",title:"Location data",description:"Also known as geographic or coordinate data. The sampleinfo in the metadata can contain this information, which is not currently used in",source:"@site/docs/popdata/locationdata.md",sourceDirName:"popdata",slug:"/popdata/locationdata",permalink:"/PopGen.jl/docs/popdata/locationdata",draft:!1,editUrl:"https://github.com/BioJulia/PopGen.jl/edit/documentation/docs/popdata/locationdata.md",tags:[],version:"current",lastUpdatedAt:1646148647,formattedLastUpdatedAt:"Mar 1, 2022",frontMatter:{id:"locationdata",title:"Location data",sidebar_label:"Location data"},sidebar:"docs",previous:{title:"Population data",permalink:"/PopGen.jl/docs/popdata/populationdata"},next:{title:"Data exploration",permalink:"/PopGen.jl/docs/popdata/dataexploration"}},s={},d=[{value:"View location data",id:"view-location-data",level:2},{value:"Add geographical coordinates",id:"add-geographical-coordinates",level:2},{value:"decimal minutes",id:"decimal-minutes",level:3},{value:"formatting requirements",id:"formatting-requirements",level:4},{value:"other formats",id:"other-formats",level:3},{value:"formatting requirements",id:"formatting-requirements-1",level:4}],p={toc:d},m="wrapper";function f(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)(m,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Also known as geographic or coordinate data. The ",(0,o.kt)("inlineCode",{parentName:"p"},"sampleinfo")," in the metadata can contain this information, which is not currently used in\nany analyses present in PopGen.jl."),(0,o.kt)("h2",{id:"view-location-data"},"View location data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},"locationdata(data::PopData)\n")),(0,o.kt)("p",null,"View location (if present) data in a ",(0,o.kt)("inlineCode",{parentName:"p"},"PopData"),",  returning a table the longitude and latitude information in the ",(0,o.kt)("inlineCode",{parentName:"p"},"metadata"),". "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},"julia> locationdata(sharks)\n212\xd72 SubDataFrame\n Row \u2502 longitude  latitude \n     \u2502 Float64    Float64  \n\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1 \u2502   28.3062  -80.5993\n   2 \u2502   28.3079  -80.5995\n   3 \u2502   28.3023  -80.5996\n  \u22ee  \u2502     \u22ee         \u22ee\n 210 \u2502   30.0522  -87.3662\n 211 \u2502   29.8234  -85.7143\n 212 \u2502   29.8234  -85.7143\n           206 rows omitted\n")),(0,o.kt)("h2",{id:"add-geographical-coordinates"},"Add geographical coordinates"),(0,o.kt)("h3",{id:"decimal-minutes"},"decimal minutes"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},"locationdata!(data::PopData; longitude::Vector{T}, latitude::Vector{T}) where T<:AbstractFloat\n")),(0,o.kt)("p",null,"Location data can be added using one of the methods of ",(0,o.kt)("inlineCode",{parentName:"p"},"locations!"),". As indicated by the bang ",(0,o.kt)("inlineCode",{parentName:"p"},"!"),", your ",(0,o.kt)("inlineCode",{parentName:"p"},"PopData")," will be edited in place, and there will be no return output. If your data is in anything other than Decimal-Degrees format, this function will convert your long/lat into Decimal Degrees. To import those data into Julia, you'll likely want to use the wonderful ",(0,o.kt)("inlineCode",{parentName:"p"},"CSV.jl")," package first. The functions accept keywords ",(0,o.kt)("inlineCode",{parentName:"p"},"longitude")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"latitude"),", or can be used without them so long as the vectors are input in that order. "),(0,o.kt)("p",null,"This method is pretty straightforward and tolerates vectors with ",(0,o.kt)("inlineCode",{parentName:"p"},"missing")," data."),(0,o.kt)("h4",{id:"formatting-requirements"},"formatting requirements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Coordinates must be decimal-minutes as either ",(0,o.kt)("inlineCode",{parentName:"li"},"Float32")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"Float64")," (e.g. ",(0,o.kt)("inlineCode",{parentName:"li"},"-21.321"),")")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},"# generate some fake location data\njulia> long = rand(212) .* 10 ; lat = rand(212) .* -10\n\njulia> locationdata!(sharks, long, lat)\n")),(0,o.kt)("h3",{id:"other-formats"},"other formats"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},"locationdata!(data::PopData; longitude::Vector{String}, latitude::Vector{String})\n")),(0,o.kt)("h4",{id:"formatting-requirements-1"},"formatting requirements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Coordinates as ",(0,o.kt)("inlineCode",{parentName:"li"},"String")," separated by spaces (",(0,o.kt)("inlineCode",{parentName:"li"},'"11 43 41"'),") or colons (",(0,o.kt)("inlineCode",{parentName:"li"},'"11:43:41"'),")"),(0,o.kt)("li",{parentName:"ul"},"Must use negative sign (",(0,o.kt)("inlineCode",{parentName:"li"},'"-11 43.52"'),") or single-letter cardinal direction (",(0,o.kt)("inlineCode",{parentName:"li"},'"11 43.52W"'),")"),(0,o.kt)("li",{parentName:"ul"},"Missing data should be coded as ",(0,o.kt)("inlineCode",{parentName:"li"},"missing")," or the string ",(0,o.kt)("inlineCode",{parentName:"li"},'"missing"')),(0,o.kt)("li",{parentName:"ul"},"Can mix colons and spaces (although it's bad practice)")),(0,o.kt)("p",null,"If not already in decimal-minutes format, it would likely be most convenient if you imported your coordinate data as vectors of strings, which would look something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},'longitude = ["-43 54 11", "22 23 11N"]\nlatitude = ["11 44 31", "-25 41 13"]\n')),(0,o.kt)("admonition",{title:"Missing values",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"This method tolerates ",(0,o.kt)("inlineCode",{parentName:"p"},"missing")," values, but you will need to ",(0,o.kt)("inlineCode",{parentName:"p"},"replace!")," instances of ",(0,o.kt)("inlineCode",{parentName:"p"},"missing")," with the string ",(0,o.kt)("inlineCode",{parentName:"p"},'"missing"'),".")))}f.isMDXComponent=!0}}]);