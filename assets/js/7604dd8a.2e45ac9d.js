"use strict";(self.webpackChunkpop_gen_jl=self.webpackChunkpop_gen_jl||[]).push([[6085],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),c=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=c(n),d=r,f=s["".concat(p,".").concat(d)]||s[d]||m[d]||i;return n?a.createElement(f,l(l({ref:t},u),{},{components:n})):a.createElement(f,l({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=s;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},9050:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={id:"pca",title:"PCA.jl",sidebar_label:"PCA.jl"},p=void 0,c={unversionedId:"api/PopGen/pca",id:"api/PopGen/pca",title:"PCA.jl",description:"PopGen.jl/src/PCA.jl",source:"@site/docs/api/PopGen/PCA.md",sourceDirName:"api/PopGen",slug:"/api/PopGen/pca",permalink:"/PopGen.jl/docs/api/PopGen/pca",draft:!1,editUrl:"https://github.com/BioJulia/PopGen.jl/edit/documentation/docs/api/PopGen/PCA.md",tags:[],version:"current",lastUpdatedAt:1653413800,formattedLastUpdatedAt:"May 24, 2022",frontMatter:{id:"pca",title:"PCA.jl",sidebar_label:"PCA.jl"},sidebar:"docs",previous:{title:"Clustering.jl",permalink:"/PopGen.jl/docs/api/PopGen/clustering"},next:{title:"PairwiseFST.jl",permalink:"/PopGen.jl/docs/api/PopGen/pairwisefst"}},u={},m=[{value:"PopGen.jl/src/PCA.jl",id:"popgenjlsrcpcajl",level:2},{value:"\ud83d\udd35 pca",id:"-pca",level:3}],s={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"popgenjlsrcpcajl"},"PopGen.jl/src/PCA.jl"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"center"},"\ud83d\udce6  not exported"),(0,i.kt)("th",{parentName:"tr",align:"center"},"\ud83d\udd35  exported by PopGen.jl")))),(0,i.kt)("h3",{id:"-pca"},"\ud83d\udd35 pca"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-julia"},'pca(data::PopData; maxpc::Int = 0, method::Symbol = :svd, missings::String = "mean", pratio::Float64 = 0.99, center::Bool = false, scale::Bool = true)\n')),(0,i.kt)("p",null,"Perform a Principal Component Analysis on a PopData object. Returns an indexible ",(0,i.kt)("inlineCode",{parentName:"p"},"MultivariateStats.PCA")," object."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"data::PopData"),": a ",(0,i.kt)("inlineCode",{parentName:"li"},"PopData")," object")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Keyword Arguments")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"method::Symbol"),": The PCA method to use (default: ",(0,i.kt)("inlineCode",{parentName:"li"},":svd"),")",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},":cov"),": based on covariance matrix decomposition"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},":svd"),": based on Singular Value Decomposition of the input data"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"maxpc::Int"),": The maximum number of principal components to retain (default: 0 = ",(0,i.kt)("inlineCode",{parentName:"li"},"(min(d, ncol-1))"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"missings::String"),": How to treat missing genotypes in the allele frequency matrix (default: ",(0,i.kt)("inlineCode",{parentName:"li"},"mean"),")",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"mean"'),": replace ",(0,i.kt)("inlineCode",{parentName:"li"},"missing")," values with the mean frequency for that allele in that locus"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"missing"'),": keep ",(0,i.kt)("inlineCode",{parentName:"li"},"missing")," values as they are"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},'"zero"'),": replace ",(0,i.kt)("inlineCode",{parentName:"li"},"missing")," values with ",(0,i.kt)("inlineCode",{parentName:"li"},"0")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"pratio::Float64"),": The maxium ratio of variances preserved in the principal subspace (default = ",(0,i.kt)("inlineCode",{parentName:"li"},"0.99"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"center::Bool"),": whether to center the allele frequency matrix (default: ",(0,i.kt)("inlineCode",{parentName:"li"},"false"),")"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"scale::Bool"),": whether to Z-score scale the allele frequency matrix (default: ",(0,i.kt)("inlineCode",{parentName:"li"},"true"),")")))}d.isMDXComponent=!0}}]);