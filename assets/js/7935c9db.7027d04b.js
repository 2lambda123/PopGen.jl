"use strict";(self.webpackChunkpop_gen_jl=self.webpackChunkpop_gen_jl||[]).push([[5018],{3905:function(e,t,a){a.d(t,{Zo:function(){return s},kt:function(){return h}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var d=n.createContext({}),p=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=p(e.components);return n.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(a),h=o,m=u["".concat(d,".").concat(h)]||u[h]||c[h]||i;return a?n.createElement(m,r(r({ref:t},s),{},{components:a})):n.createElement(m,r({ref:t},s))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var p=2;p<i;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4417:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return s},default:function(){return u}});var n=a(7462),o=a(3366),i=(a(7294),a(3905)),r=["components"],l={id:"workingwithpopdata",title:"Working with PopData",sidebar_label:"Working with PopData"},d=void 0,p={unversionedId:"workingwithpopdata/workingwithpopdata",id:"workingwithpopdata/workingwithpopdata",isDocsHomePage:!1,title:"Working with PopData",description:'PopGen.jl includes basic commands to provide obvious methods to inspect and alter PopData. Using standard Julia conventions, only commands ending with a bang ! are mutable, meaning they alter the input data. So, commands like populations will show you population information, whereas populations! will change that information in your PopData. The mutable commands here alter the data in your PopData, but not the source data (i.e. the files used to create the PopData). The "manipulation" commands were separated into smaller sections to make it less overwhelming, and using the gulfsharks data, you can explore each of the sections like a little tutorial. The sections don\'t follow any particular order, so feel free to jump around however you like.',source:"@site/docs/workingwithpopdata/workingwithpopdata.md",sourceDirName:"workingwithpopdata",slug:"/workingwithpopdata/workingwithpopdata",permalink:"/PopGen.jl/docs/workingwithpopdata/workingwithpopdata",editUrl:"https://github.com/BioJulia/PopGen.jl/edit/documentation/docs/workingwithpopdata/workingwithpopdata.md",tags:[],version:"current",lastUpdatedAt:1636560272,formattedLastUpdatedAt:"11/10/2021",frontMatter:{id:"workingwithpopdata",title:"Working with PopData",sidebar_label:"Working with PopData"},sidebar:"docs",previous:{title:"The PopData type",permalink:"/PopGen.jl/docs/workingwithpopdata/popdata"},next:{title:"Viewing data",permalink:"/PopGen.jl/docs/workingwithpopdata/viewdata"}},s=[{value:"Topics",id:"topics",children:[{value:"Viewing Data",id:"viewing-data",children:[],level:4},{value:"Adding Information",id:"adding-information",children:[],level:4},{value:"Data Exclusion",id:"data-exclusion",children:[],level:4},{value:"Conditionals and Logic",id:"conditionals-and-logic",children:[],level:4},{value:"Population Data",id:"population-data",children:[],level:4},{value:"Location Data",id:"location-data",children:[],level:4},{value:"Data Exploration",id:"data-exploration",children:[],level:4},{value:"Advanced Indexing",id:"advanced-indexing",children:[],level:4}],level:2}],c={toc:s};function u(e){var t=e.components,a=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"PopGen.jl includes basic commands to provide obvious methods to inspect and alter ",(0,i.kt)("inlineCode",{parentName:"p"},"PopData"),". Using standard Julia conventions, only commands ending with a bang ",(0,i.kt)("inlineCode",{parentName:"p"},"!")," are mutable, meaning they alter the input data. So, commands like ",(0,i.kt)("inlineCode",{parentName:"p"},"populations")," will show you population information, whereas ",(0,i.kt)("inlineCode",{parentName:"p"},"populations!")," will change that information in your ",(0,i.kt)("inlineCode",{parentName:"p"},"PopData"),". The mutable commands here alter the data in your ",(0,i.kt)("inlineCode",{parentName:"p"},"PopData"),", but not the source data (i.e. the files used to create the ",(0,i.kt)("inlineCode",{parentName:"p"},"PopData"),'). The "manipulation" commands were separated into smaller sections to make it less overwhelming, and using the ',(0,i.kt)("inlineCode",{parentName:"p"},"gulfsharks")," data, you can explore each of the sections like a little tutorial. The sections don't follow any particular order, so feel free to jump around however you like. "),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"TLDR")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"End-users (vs developers) shouldn't access PopData fields directly"))),(0,i.kt)("p",null,"In earlier versions of PopGen.jl, you were encouraged to directly access the internal fields of PopData. After careful consideration\nand discussion with other users and developers, it's been decided that we should follow standard-ish convention and provide function\nwrappers to view PopData fields and discourage direct access (unless you're a developer). This decision is intended to limit unintentional\nerrors, but also means a user has less to learn to get started.\n:::"),(0,i.kt)("p",null,"To follow along like a tutorial, load the ",(0,i.kt)("inlineCode",{parentName:"p"},"@gulfsharks")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"@nancycats")," data in if you haven't already:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-julia"},"julia> using PopGen\n\njulia> sharks = @gulfsharks ;\n")),(0,i.kt)("h2",{id:"topics"},"Topics"),(0,i.kt)("h4",{id:"viewing-data"},(0,i.kt)("a",{parentName:"h4",href:"viewdata"},"Viewing Data")),(0,i.kt)("h4",{id:"adding-information"},(0,i.kt)("a",{parentName:"h4",href:"addingdata"},"Adding Information")),(0,i.kt)("h4",{id:"data-exclusion"},(0,i.kt)("a",{parentName:"h4",href:"exclusion"},"Data Exclusion")),(0,i.kt)("h4",{id:"conditionals-and-logic"},(0,i.kt)("a",{parentName:"h4",href:"conditionals"},"Conditionals and Logic")),(0,i.kt)("h4",{id:"population-data"},(0,i.kt)("a",{parentName:"h4",href:"populationdata"},"Population Data")),(0,i.kt)("h4",{id:"location-data"},(0,i.kt)("a",{parentName:"h4",href:"locationdata"},"Location Data")),(0,i.kt)("h4",{id:"data-exploration"},(0,i.kt)("a",{parentName:"h4",href:"dataexploration"},"Data Exploration")),(0,i.kt)("h4",{id:"advanced-indexing"},(0,i.kt)("a",{parentName:"h4",href:"advancedindexing"},"Advanced Indexing")))}u.isMDXComponent=!0}}]);