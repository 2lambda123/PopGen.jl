"use strict";(self.webpackChunkpop_gen_jl=self.webpackChunkpop_gen_jl||[]).push([[5993],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return d}});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var p=a.createContext({}),c=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},f=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=c(t),d=l,m=f["".concat(p,".").concat(d)]||f[d]||s[d]||r;return t?a.createElement(m,o(o({ref:n},u),{},{components:t})):a.createElement(m,o({ref:n},u))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=f;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}f.displayName="MDXCreateElement"},8774:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return p},metadata:function(){return c},assets:function(){return u},toc:function(){return s},default:function(){return d}});var a=t(7462),l=t(3366),r=(t(7294),t(3905)),o=["components"],i={id:"dataexploration",title:"DataExploration.jl",sidebar_label:"DataExploration.jl"},p=void 0,c={unversionedId:"api/PopGen/dataexploration",id:"api/PopGen/dataexploration",title:"DataExploration.jl",description:"PopGen.jl/src/DataExplortation.jl",source:"@site/docs/api/PopGen/DataExploration.md",sourceDirName:"api/PopGen",slug:"/api/PopGen/dataexploration",permalink:"/PopGen.jl/docs/api/PopGen/dataexploration",editUrl:"https://github.com/BioJulia/PopGen.jl/edit/documentation/docs/api/PopGen/DataExploration.md",tags:[],version:"current",lastUpdatedAt:1646148647,formattedLastUpdatedAt:"3/1/2022",frontMatter:{id:"dataexploration",title:"DataExploration.jl",sidebar_label:"DataExploration.jl"},sidebar:"docs",previous:{title:"AlleleMatrices.jl",permalink:"/PopGen.jl/docs/api/PopGen/allelematrices"},next:{title:"FstByLocus.jl",permalink:"/PopGen.jl/docs/api/PopGen/fstbylocus"}},u={},s=[{value:"PopGen.jl/src/DataExplortation.jl",id:"popgenjlsrcdataexplortationjl",level:2},{value:"\ud83d\udd35 allelefreqtable",id:"-allelefreqtable",level:3},{value:"\ud83d\udd35 genofreqtable",id:"-genofreqtable",level:3},{value:"\ud83d\udd35 missingdata",id:"-missingdata",level:3},{value:"\ud83d\udd35 pairwiseidentical",id:"-pairwiseidentical",level:3}],f={toc:s};function d(e){var n=e.components,t=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"popgenjlsrcdataexplortationjl"},"PopGen.jl/src/DataExplortation.jl"),(0,r.kt)("p",null,"\ud83d\udce6 => not exported |\n\ud83d\udd35 => exported by PopGen.jl"),(0,r.kt)("h3",{id:"-allelefreqtable"},"\ud83d\udd35 allelefreqtable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},'allelefreqtable(data::PopData; by::String = "global")\n')),(0,r.kt)("p",null,"Return a table of the observed ",(0,r.kt)("inlineCode",{parentName:"p"},"global")," (default) or ",(0,r.kt)("inlineCode",{parentName:"p"},"population")," allele frequencies in a PopData object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},'julia> cats = @nancycats ;\n\njulia> allelefreqtable(cats)\n108\xd74 DataFrame\n Row \u2502 locus   allele  count  frequency  \n     \u2502 String  Int16?  Int64  Float64    \n\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1 \u2502 fca8       135    105  0.241935\n   2 \u2502 fca8       143     44  0.101382\n   3 \u2502 fca8       133     33  0.0760369\n   4 \u2502 fca8       137     83  0.191244\n  \u22ee  \u2502   \u22ee       \u22ee       \u22ee        \u22ee\n 105 \u2502 fca37      226      2  0.00421941\n 106 \u2502 fca37      216      7  0.0147679\n 107 \u2502 fca37      224      2  0.00421941\n 108 \u2502 fca37      204      6  0.0126582\n                         100 rows omitted\n\njulia> allelefreqtable(cats, by = "population")\n839\xd75 DataFrame\n Row \u2502 locus   population  allele  count  frequency \n     \u2502 String  String      Int16?  Int64  Float64   \n\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1 \u2502 fca8    1              135      9  0.5625\n   2 \u2502 fca8    1              143      4  0.25\n   3 \u2502 fca8    1              133      2  0.125\n   4 \u2502 fca8    1              137      1  0.0625\n  \u22ee  \u2502   \u22ee         \u22ee         \u22ee       \u22ee        \u22ee\n 836 \u2502 fca37   16             210      5  0.208333\n 837 \u2502 fca37   17             208     22  0.846154\n 838 \u2502 fca37   17             182      3  0.115385\n 839 \u2502 fca37   17             220      1  0.0384615\n                                    831 rows omitted\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"-genofreqtable"},"\ud83d\udd35 genofreqtable"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},'genofreqtable(data::PopData; by::String = "global")\n')),(0,r.kt)("p",null,"Return a table of the observed ",(0,r.kt)("inlineCode",{parentName:"p"},"global")," (default) or ",(0,r.kt)("inlineCode",{parentName:"p"},"population")," genotype frequencies in a PopData object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},'julia> cats = @nancycats ;\n\njulia> genofreqtable(cats)\n\n341\xd74 DataFrame\n Row \u2502 locus   genotype    count  frequency  \n     \u2502 String  Tuple\u2026      Int64  Float64    \n\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1 \u2502 fca8    (135, 143)     16  0.0737327\n   2 \u2502 fca8    (133, 135)      9  0.0414747\n   3 \u2502 fca8    (135, 135)     23  0.105991\n   4 \u2502 fca8    (137, 143)      8  0.0368664\n  \u22ee  \u2502   \u22ee         \u22ee         \u22ee        \u22ee\n 338 \u2502 fca37   (206, 220)      1  0.00421941\n 339 \u2502 fca37   (208, 218)      1  0.00421941\n 340 \u2502 fca37   (184, 184)      3  0.0126582\n 341 \u2502 fca37   (208, 210)      3  0.0126582\n                             333 rows omitted\n\njulia> genofreqtable(cats, by = "population")\n1094\xd75 DataFrame\n  Row \u2502 locus   population  genotype    count  frequency         \n      \u2502 String  String      Tuple\u2026      Int64  Float64           \n\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500        \n    1 \u2502 fca8    1           (135, 143)      3  0.375\n    2 \u2502 fca8    1           (133, 135)      2  0.25\n    3 \u2502 fca8    1           (135, 135)      2  0.25\n    4 \u2502 fca8    1           (137, 143)      1  0.125\n  \u22ee   \u2502   \u22ee         \u22ee           \u22ee         \u22ee        \u22ee\n 1091 \u2502 fca37   17          (208, 208)     10  0.769231\n 1092 \u2502 fca37   17          (182, 182)      1  0.0769231\n 1093 \u2502 fca37   17          (182, 208)      1  0.0769231\n 1094 \u2502 fca37   17          (208, 220)      1  0.0769231\n                                        1086 rows omitted \n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"-missingdata"},"\ud83d\udd35 missingdata"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},'missingdata(data::PopData; by::String = "sample")\n')),(0,r.kt)("p",null,"Get missing genotype information in a ",(0,r.kt)("inlineCode",{parentName:"p"},"PopData"),". Specify a mode of operation to return a DataFrame corresponding with that missing information."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Modes")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"sample"')," - returns a count and list of missing loci per individual (default)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"pop"')," - returns a count of missing genotypes per population"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"locus"')," - returns a count of missing genotypes per locus"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"full"')," - returns a count of missing genotypes per locus per population")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},'missingdata(@gulfsharks, by = "pop")\n')),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"-pairwiseidentical"},"\ud83d\udd35 pairwiseidentical"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"pairwiseidentical(data::PopData)\n")),(0,r.kt)("p",null,"Return a table of the percent of identical genotypes at each locus between all pairs of all individuals in a PopData object."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},"julia> cats = @nancycats;\n\njulia> pairwiseidentical(cats)\n27966\xd74 DataFrame\n   Row \u2502 sample_1  sample_2  identical  n     \n       \u2502 String    String    Float64    Int64 \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n     1 \u2502 N215      N216           0.5       8\n     2 \u2502 N215      N217           0.25      8\n     3 \u2502 N215      N218           0.38      8\n     4 \u2502 N215      N219           0.38      8\n   \u22ee   \u2502    \u22ee         \u22ee          \u22ee        \u22ee\n 27963 \u2502 N297      N290           0.29      7\n 27964 \u2502 N281      N289           0.25      8\n 27965 \u2502 N281      N290           0.43      7\n 27966 \u2502 N289      N290           0.14      7\n                            27958 rows omitted\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"pairwiseidentical(data::PopData, sample_names::Vector{String})\n")),(0,r.kt)("p",null,"Return a table of the percent of identical genotypes at each locus\nbetween all pairs of provided ",(0,r.kt)("inlineCode",{parentName:"p"},"sample_names"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},'julia> cats = @nancycats;\n\njulia> interesting_cats = samples(cats)[1:5]\n5-element Array{String,1}:\n "N215"\n "N216"\n "N217"\n "N218"\n "N219"\n\njulia> pairwiseidentical(cats, interesting_cats)\n10\xd74 DataFrame\n Row \u2502 sample_1  sample_2  identical  n     \n     \u2502 String    String    Float64    Int64 \n\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1 \u2502 N215      N216           0.5       8 \n   2 \u2502 N215      N217           0.25      8 \n   3 \u2502 N215      N218           0.38      8 \n   4 \u2502 N215      N219           0.38      8 \n   5 \u2502 N216      N217           0.12      8 \n   6 \u2502 N216      N218           0.25      8 \n   7 \u2502 N216      N219           0.38      8 \n   8 \u2502 N217      N218           0.0       9 \n   9 \u2502 N217      N219           0.11      9 \n  10 \u2502 N218      N219           0.33      9 \n')))}d.isMDXComponent=!0}}]);