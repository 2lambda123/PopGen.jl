"use strict";(self.webpackChunkpop_gen_jl=self.webpackChunkpop_gen_jl||[]).push([[3373],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=c(n),f=a,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||o;return n?r.createElement(m,l(l({ref:t},s),{},{components:n})):r.createElement(m,l({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=f;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[u]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},7122:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={id:"fstglobal",title:"FstGlobal.jl",sidebar_label:"FstGlobal.jl"},p=void 0,c={unversionedId:"api/PopGen/fstglobal",id:"api/PopGen/fstglobal",title:"FstGlobal.jl",description:"PopGen.jl/src/FStatistics/FstGlobal.jl",source:"@site/docs/api/PopGen/FstGlobal.md",sourceDirName:"api/PopGen",slug:"/api/PopGen/fstglobal",permalink:"/PopGen.jl/docs/api/PopGen/fstglobal",draft:!1,editUrl:"https://github.com/BioJulia/PopGen.jl/edit/documentation/docs/api/PopGen/FstGlobal.md",tags:[],version:"current",lastUpdatedAt:1653416003,formattedLastUpdatedAt:"May 24, 2022",frontMatter:{id:"fstglobal",title:"FstGlobal.jl",sidebar_label:"FstGlobal.jl"},sidebar:"docs",previous:{title:"FstByLocus.jl",permalink:"/PopGen.jl/docs/api/PopGen/fstbylocus"},next:{title:"FstPermutations.jl",permalink:"/PopGen.jl/docs/api/PopGen/fstpermutations"}},s={},u=[{value:"PopGen.jl/src/FStatistics/FstGlobal.jl",id:"popgenjlsrcfstatisticsfstglobaljl",level:2},{value:"\ud83d\udd35 Hudson",id:"-hudson",level:3},{value:"\ud83d\udd35 Nei",id:"-nei",level:3},{value:"\ud83d\udd35 WeirCockerham",id:"-weircockerham",level:3}],d={toc:u},f="wrapper";function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)(f,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"popgenjlsrcfstatisticsfstglobaljl"},"PopGen.jl/src/FStatistics/FstGlobal.jl"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"center"},"\ud83d\udce6  not exported"),(0,o.kt)("th",{parentName:"tr",align:"center"},"\ud83d\udd35  exported by PopGen.jl")))),(0,o.kt)("h3",{id:"-hudson"},"\ud83d\udd35 Hudson"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},"Hudson(data::PopData)\nHudson(pop1::T, pop2::T) where T<:GenoArray\nHudson(population_1::T, population_2::T) where T<:AbstractMatrix\n")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"-nei"},"\ud83d\udd35 Nei"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},"Nei(data::PopData)\nNei(population_1::T, population_2::T) where T<:AbstractMatrix\n")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"-weircockerham"},"\ud83d\udd35 WeirCockerham"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-julia"},"WeirCockerham(data::PopData)\nWeirCockerham(population_1::T, population_2::T) where T<:AbstractMatrix\n")))}m.isMDXComponent=!0}}]);