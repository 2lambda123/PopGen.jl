"use strict";(self.webpackChunkpop_gen_jl=self.webpackChunkpop_gen_jl||[]).push([[7499],{3905:function(e,a,t){t.d(a,{Zo:function(){return s},kt:function(){return m}});var n=t(7294);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=n.createContext({}),p=function(e){var a=n.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},s=function(e){var a=p(e.components);return n.createElement(d.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var t=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),c=p(t),m=o,f=c["".concat(d,".").concat(m)]||c[m]||u[m]||r;return t?n.createElement(f,l(l({ref:a},s),{},{components:t})):n.createElement(f,l({ref:a},s))}));function m(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=c;var i={};for(var d in a)hasOwnProperty.call(a,d)&&(i[d]=a[d]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var p=2;p<r;p++)l[p]=t[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}c.displayName="MDXCreateElement"},6383:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return i},contentTitle:function(){return d},metadata:function(){return p},assets:function(){return s},toc:function(){return u},default:function(){return m}});var n=t(7462),o=t(3366),r=(t(7294),t(3905)),l=["components"],i={id:"addingdata",title:"Adding sample/locus data",sidebar_label:"Adding sample/locus data"},d=void 0,p={unversionedId:"popdata/addingdata",id:"popdata/addingdata",title:"Adding sample/locus data",description:"PopData's standard/default format includes information on:",source:"@site/docs/popdata/addingdata.md",sourceDirName:"popdata",slug:"/popdata/addingdata",permalink:"/PopGen.jl/docs/popdata/addingdata",editUrl:"https://github.com/BioJulia/PopGen.jl/edit/documentation/docs/popdata/addingdata.md",tags:[],version:"current",lastUpdatedAt:1646148647,formattedLastUpdatedAt:"3/1/2022",frontMatter:{id:"addingdata",title:"Adding sample/locus data",sidebar_label:"Adding sample/locus data"},sidebar:"docs",previous:{title:"Viewing data",permalink:"/PopGen.jl/docs/popdata/viewdata"},next:{title:"Data Exclusion",permalink:"/PopGen.jl/docs/popdata/exclusion"}},s={},u=[{value:"adding sampleinfo",id:"adding-sampleinfo",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Keyword Arguments",id:"keyword-arguments",level:3},{value:"adding locus information",id:"adding-locus-information",level:2},{value:"Arguments",id:"arguments-1",level:3},{value:"Keyword Arguments",id:"keyword-arguments-1",level:3}],c={toc:u};function m(e){var a=e.components,t=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,n.Z)({},c,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"PopData's standard/default format includes information on:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"sample name"),(0,r.kt)("li",{parentName:"ul"},"sample population name"),(0,r.kt)("li",{parentName:"ul"},"sample ploidy"),(0,r.kt)("li",{parentName:"ul"},"sample genotypes"),(0,r.kt)("li",{parentName:"ul"},"locus name"),(0,r.kt)("li",{parentName:"ul"},"locus physical location (basepairs) ","[optional]"),(0,r.kt)("li",{parentName:"ul"},"locus genetic position (centiMorgans) ","[optional]")),(0,r.kt)("p",null,"But, sometimes you might want to add more information to the data structure, so there are the mutating\nfunctions ",(0,r.kt)("inlineCode",{parentName:"p"},"sampleinfo!")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"locusinfo!")," to do that."),(0,r.kt)("h2",{id:"adding-sampleinfo"},"adding sampleinfo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},"sampleinfo!(::PopData, metadata::Pair{Symbol, Vector}; categorical::Bool = false)\nsampleinfo!(::PopData, metadata::Pair{String, Vector}; categorical::Bool = false)\n")),(0,r.kt)("p",null,"Add an additional column sample information to ",(0,r.kt)("inlineCode",{parentName:"p"},"PopData")," metadata. Mutates ",(0,r.kt)("inlineCode",{parentName:"p"},"PopData")," in place. The new values\nmust be in the same order as the samples in ",(0,r.kt)("inlineCode",{parentName:"p"},"sampleinfo(popdata)"),"."),(0,r.kt)("h3",{id:"arguments"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"metadata")," : A Pair of ",(0,r.kt)("inlineCode",{parentName:"li"},":ColumnName => [Values]"))),(0,r.kt)("h3",{id:"keyword-arguments"},"Keyword Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"categorical"),' : Boolean of whether the metadata being added is categorical aka "factors" (default: ',(0,r.kt)("inlineCode",{parentName:"li"},"false"),")")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'cats = @nancycats ;\nsampleinfo!(cats, :whiskerlength => rand(metadata(cats).samples))\nsampleinfo!(cats, "tailcolor" => rand(["orange", "brown"], metadata(cats).samples), categorical = true)\ncats\nPopData{Diploid, 9 Microsatellite loci}\n  Samples: 237\n  Populations: 17\n  Other Info: ["whiskerlength", "tailcolor"]\n')),(0,r.kt)("h2",{id:"adding-locus-information"},"adding locus information"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},"locusinfo!(::PopData, metadata::Pair{Symbol, Vector}; categorical::Bool = false)\nlocusinfo!(::PopData, metadata::Pair{String, Vector}; categorical::Bool = false)\n")),(0,r.kt)("p",null,"Add an additional locus information to ",(0,r.kt)("inlineCode",{parentName:"p"},"PopData")," metadata. Mutates ",(0,r.kt)("inlineCode",{parentName:"p"},"PopData")," in place. Metadata\nmust be in the same order as the samples in ",(0,r.kt)("inlineCode",{parentName:"p"},"locusinfo(PopData)"),"."),(0,r.kt)("h3",{id:"arguments-1"},"Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"metadata")," : A Pair of :ColumnName => ","[Values]")),(0,r.kt)("h3",{id:"keyword-arguments-1"},"Keyword Arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"categorical"),' : Boolean of whether the metadata being added is categorical aka "factors" (default: ',(0,r.kt)("inlineCode",{parentName:"li"},"false"),")")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},'cats = @nancycats\nlocusinfo!(cats, :quality => rand(metadata(cats).loci))\ncats\nPopData{Diploid, 9 Microsatellite loci}\n  Samples: 237\n  Populations: 17\n  Other Info: ["quality"]\n')))}m.isMDXComponent=!0}}]);