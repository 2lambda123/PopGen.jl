"use strict";(self.webpackChunkpop_gen_jl=self.webpackChunkpop_gen_jl||[]).push([[3383],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),l=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return o.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=l(n),f=r,h=d["".concat(s,".").concat(f)]||d[f]||u[f]||a;return n?o.createElement(h,i(i({ref:t},c),{},{components:n})):o.createElement(h,i({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,i[1]=p;for(var l=2;l<a;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4317:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return u}});var o=n(7462),r=n(3366),a=(n(7294),n(3905)),i=["components"],p={id:"api",title:"API",sidebar_label:"API (start here)"},s=void 0,l={unversionedId:"api/api",id:"api/api",title:"API",description:"These pages contains the APIs, or Application Programming Interface, which are the entirety of all the functions/commands available in PopGen.jl. Unlike other sections of these docs, these pages are intended to be technical rather than tutorial. Included here are the function definitions and their docstrings as they appear inside this package. Most of these functions are used under-the-hood and not exported, meaning that if you want to use them, you will need to invoke them with PackageName.function. For example, if you wanted to use uniquealleles (which is not exported), you can do so with PopGenCore.uniquealleles(). As a note, most things in PopGenCore are exported (for ease of development), and many parts of PopGenCore.jl are reexported by PopGen.jl.",source:"@site/docs/api/API.md",sourceDirName:"api",slug:"/api/",permalink:"/PopGen.jl/docs/api/",draft:!1,editUrl:"https://github.com/BioJulia/PopGen.jl/edit/documentation/docs/api/API.md",tags:[],version:"current",lastUpdatedAt:1636029729,formattedLastUpdatedAt:"Nov 4, 2021",frontMatter:{id:"api",title:"API",sidebar_label:"API (start here)"},sidebar:"docs",previous:{title:"Sibling Pairs",permalink:"/PopGen.jl/docs/simulations/sibship_simulations"},next:{title:"DataExploration.jl",permalink:"/PopGen.jl/docs/api/PopGen/dataexploration"}},c={},u=[],d={toc:u};function f(e){var t=e.components,n=(0,r.Z)(e,i);return(0,a.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"These pages contains the APIs, or ",(0,a.kt)("strong",{parentName:"p"},"A"),"pplication ",(0,a.kt)("strong",{parentName:"p"},"P"),"rogramming ",(0,a.kt)("strong",{parentName:"p"},"I"),"nterface, which are the entirety of all the functions/commands available in PopGen.jl. Unlike other sections of these docs, these pages are intended to be ",(0,a.kt)("em",{parentName:"p"},"technical")," rather than tutorial. Included here are the function definitions and their docstrings as they appear inside this package. Most of these functions are used under-the-hood and not exported, meaning that if you want to use them, you will need to invoke them with ",(0,a.kt)("inlineCode",{parentName:"p"},"PackageName.function"),". For example, if you wanted to use ",(0,a.kt)("inlineCode",{parentName:"p"},"uniquealleles")," (which is not exported), you can do so with ",(0,a.kt)("inlineCode",{parentName:"p"},"PopGenCore.uniquealleles()"),". As a note, most things in PopGenCore are exported (for ease of development), and many parts of PopGenCore.jl are reexported by PopGen.jl."),(0,a.kt)("p",null,"Each API page features icons indicating whether a function is exported by that package. You will see two icons next to functions that PopGen.jl reexports from PopGenCore.jl.\nEach page has a legend at the top for convenience. This is the icon system:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\ud83d\udce6 indicates the function is not exported by any package. ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"functions beginning with underscores always have \ud83d\udce6"))),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udd35 indicates the function is exported by PopGenCore.jl"),(0,a.kt)("li",{parentName:"ul"},"\ud83d\udfea indicates the function is exported by the package the function appears in (PopGen.jl, PopGenSims.jl). ",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"this applies only to non-PopGenCore.jl packages")))))}f.isMDXComponent=!0}}]);