"use strict";(self.webpackChunkpop_gen_jl=self.webpackChunkpop_gen_jl||[]).push([[8910],{4137:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=i,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2216:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return m}});var a=n(7462),i=n(3366),r=(n(7294),n(4137)),o=["components"],l={id:"pca",title:"Principal Component Analysis",sidebar_label:"Principal Component Analysis"},s=void 0,p={unversionedId:"analyses/pca",id:"analyses/pca",title:"Principal Component Analysis",description:"A common way to analyze genetic data is dimensionality reduction, and PopGen.jl provides pca() to perform a Pricipal Component Analysis. This",source:"@site/docs/analyses/pca.md",sourceDirName:"analyses",slug:"/analyses/pca",permalink:"/PopGen.jl/docs/analyses/pca",draft:!1,editUrl:"https://github.com/BioJulia/PopGen.jl/edit/documentation/docs/analyses/pca.md",tags:[],version:"current",lastUpdatedAt:1653413800,formattedLastUpdatedAt:"May 24, 2022",frontMatter:{id:"pca",title:"Principal Component Analysis",sidebar_label:"Principal Component Analysis"},sidebar:"docs",previous:{title:"Pairwise F-Statistics",permalink:"/PopGen.jl/docs/analyses/fstatistics"},next:{title:"Kinship",permalink:"/PopGen.jl/docs/analyses/kinship"}},c={},m=[{value:"Principal Component Anaylsis",id:"principal-component-anaylsis",level:3},{value:"keyword arguments",id:"keyword-arguments",level:4},{value:"Acknowledgements",id:"acknowledgements",level:2}],u={toc:m},d="wrapper";function f(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)(d,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A common way to analyze genetic data is dimensionality reduction, and PopGen.jl provides ",(0,r.kt)("inlineCode",{parentName:"p"},"pca()")," to perform a Pricipal Component Analysis. This\nfunction wraps ",(0,r.kt)("inlineCode",{parentName:"p"},"fit(PCA, ...)")," from (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaStats/MultivariateStats.jl"},"MultivariateStats.jl"),") to be used on ",(0,r.kt)("inlineCode",{parentName:"p"},"PopData")," objects.\nThe genotypes are processed into a matrix of (rows: samples, cols: allele frequencies), giving you the option of how to manage ",(0,r.kt)("inlineCode",{parentName:"p"},"missing")," data, and the PCA is performed on this allele-frequency matrix. "),(0,r.kt)("admonition",{title:"suppressing output",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"For datasets greater than 10 loci, we recommend appending a semicolon to the end of the function call to suppress output to the REPL. (",(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaStats/MultivariateStats.jl/issues/186"},"issue #186"),")")),(0,r.kt)("h3",{id:"principal-component-anaylsis"},"Principal Component Anaylsis"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},'pca(::PopData; maxpc::Int = 0, method::Symbol = :svd, missings::String = "mean", pratio::Float64 = 0.99, center::Bool = false, scale::Bool = true)\n')),(0,r.kt)("p",null,"Perform a Principal Component Analysis on a PopData object. Returns an indexible ",(0,r.kt)("inlineCode",{parentName:"p"},"MultivariateStats.PCA")," object."),(0,r.kt)("h4",{id:"keyword-arguments"},"keyword arguments"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"method::Symbol"),": The PCA method to use (default: ",(0,r.kt)("inlineCode",{parentName:"li"},":svd"),")",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":cov"),": based on covariance matrix decomposition"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":svd"),": based on Singular Value Decomposition of the input data"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"maxpc::Int"),": The maximum number of principal components to retain (default: 0 = ",(0,r.kt)("inlineCode",{parentName:"li"},"(min(d, ncol-1))"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"missings::String"),": How to treat missing genotypes in the allele frequency matrix (default: ",(0,r.kt)("inlineCode",{parentName:"li"},'"mean"'),")",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"mean"'),": replace ",(0,r.kt)("inlineCode",{parentName:"li"},"missing")," values with the mean frequency for that allele in that locus"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"missing"'),": keep ",(0,r.kt)("inlineCode",{parentName:"li"},"missing")," values as they are"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'"zero"'),": replace ",(0,r.kt)("inlineCode",{parentName:"li"},"missing")," values with ",(0,r.kt)("inlineCode",{parentName:"li"},"0")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"pratio::Float64"),": The maxium ratio of variances preserved in the principal subspace (default = ",(0,r.kt)("inlineCode",{parentName:"li"},"0.99"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"center::Bool"),": whether to center the allele frequency matrix (default: ",(0,r.kt)("inlineCode",{parentName:"li"},"false"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"scale::Bool"),": whether to Z-score scale the allele frequency matrix (default: ",(0,r.kt)("inlineCode",{parentName:"li"},"true"),")")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-julia"},"julia> cats = @nancycats;\n\njulia> pca_cats = pca(cats, maxpc = 40); \n\njulia> pca_cats.proj       # the projection matrix\n237\xd740 Matrix{Float64}:\n -0.0922663  -0.00353549  -0.0205698    \u2026   0.0148947    0.0114937     0.0119581    \n -0.0939368   0.00935327  -0.0488424       -0.0167817   -0.0144753    -0.0348131    \n -0.0545479  -0.00597291   0.0527322       -0.0359343    0.00588278    0.0205089    \n -0.0745392   0.0306307   -0.0210157        0.100871     0.0440558     0.0728491    \n  \u22ee                                     \u22f1\n -0.0859615   0.0369075    0.000597856     -0.0633689    0.0249073    -0.0405845    \n -0.0547981   0.0322698   -0.0107031       -0.1138      -0.000545308   0.00296074   \n -0.0950973   0.0163225    0.00588324   \u2026   0.0256939    0.0831163     0.00374728   \n -0.0843321  -0.0082427   -0.0309442        0.00382228   0.0179109     0.0217293\n\njulia> pca_cats.prinvars   # the principal variances\n40-element Vector{Float64}:\n 20.906886724195086\n  8.015966142401036\n  7.501281679600134\n  6.628421860444929\n  \u22ee\n  2.6556826537989755\n  2.599100605083436\n  2.5912046561168447\n  2.5000331618590637\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"acknowledgements"},"Acknowledgements"),(0,r.kt)("p",null,"The PCA method is an extension of the hyper-fast methods written in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaStats/MultivariateStats.jl"},"MultivariateStats.jl"),". The centering and scaling are also outsourced to the methods present in ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/JuliaStats/StatsBase.jl"},"StatsBase.jl"),". A lot of clever package authors and contributors in this ecosystem!"))}f.isMDXComponent=!0}}]);