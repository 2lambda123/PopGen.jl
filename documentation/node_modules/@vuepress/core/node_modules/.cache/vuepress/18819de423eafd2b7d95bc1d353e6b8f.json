{"remainingRequest":"/home/pdimens/PopGen.jl/documentation/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pdimens/PopGen.jl/documentation/node_modules/vuepress-plugin-element-tabs/lib/components/Tab-nav.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pdimens/PopGen.jl/documentation/node_modules/vuepress-plugin-element-tabs/lib/components/Tab-nav.vue","mtime":1585424453120},{"path":"/home/pdimens/PopGen.jl/documentation/node_modules/cache-loader/dist/cjs.js","mtime":1585329509973},{"path":"/home/pdimens/PopGen.jl/documentation/node_modules/babel-loader/lib/index.js","mtime":1585329509994},{"path":"/home/pdimens/PopGen.jl/documentation/node_modules/cache-loader/dist/cjs.js","mtime":1585329509973},{"path":"/home/pdimens/PopGen.jl/documentation/node_modules/vue-loader/lib/index.js","mtime":1585329511712}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Tab-nav.vue"],"names":[],"mappingsfile":"Tab-nav.vue","sourceRoot":"node_modules/vuepress-plugin-element-tabs/lib/components","sourcesContent":["<script>\n  import TabBar from './Tab-bar.vue';\n  import { addResizeListener, removeResizeListener } from '../utils/resize-event';\n  function noop() {}\n  const firstUpperCase = str => {\n    return str.toLowerCase().replace(/( |^)[a-z]/g, (L) => L.toUpperCase());\n  };\n  export default {\n    name: 'TabNav',\n    components: {\n      TabBar\n    },\n    inject: ['rootTabs'],\n    props: {\n      panes: Array,\n      currentName: String,\n      editable: Boolean,\n      onTabClick: {\n        type: Function,\n        default: noop\n      },\n      onTabRemove: {\n        type: Function,\n        default: noop\n      },\n      type: String,\n      stretch: Boolean\n    },\n    data() {\n      return {\n        scrollable: false,\n        navOffset: 0,\n        isFocus: false,\n        focusable: true\n      };\n    },\n    computed: {\n      navStyle() {\n        const dir = ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'X' : 'Y';\n        return {\n          transform: `translate${dir}(-${this.navOffset}px)`\n        };\n      },\n      sizeName() {\n        return ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'width' : 'height';\n      }\n    },\n    methods: {\n      scrollPrev() {\n        const containerSize = this.$refs.navScroll[`offset${firstUpperCase(this.sizeName)}`];\n        const currentOffset = this.navOffset;\n        if (!currentOffset) return;\n        let newOffset = currentOffset > containerSize\n          ? currentOffset - containerSize\n          : 0;\n        this.navOffset = newOffset;\n      },\n      scrollNext() {\n        const navSize = this.$refs.nav[`offset${firstUpperCase(this.sizeName)}`];\n        const containerSize = this.$refs.navScroll[`offset${firstUpperCase(this.sizeName)}`];\n        const currentOffset = this.navOffset;\n        if (navSize - currentOffset <= containerSize) return;\n        let newOffset = navSize - currentOffset > containerSize * 2\n          ? currentOffset + containerSize\n          : (navSize - containerSize);\n        this.navOffset = newOffset;\n      },\n      scrollToActiveTab() {\n        if (!this.scrollable) return;\n        const nav = this.$refs.nav;\n        const activeTab = this.$el.querySelector('.is-active');\n        if (!activeTab) return;\n        const navScroll = this.$refs.navScroll;\n        const activeTabBounding = activeTab.getBoundingClientRect();\n        const navScrollBounding = navScroll.getBoundingClientRect();\n        const maxOffset = nav.offsetWidth - navScrollBounding.width;\n        const currentOffset = this.navOffset;\n        let newOffset = currentOffset;\n        if (activeTabBounding.left < navScrollBounding.left) {\n          newOffset = currentOffset - (navScrollBounding.left - activeTabBounding.left);\n        }\n        if (activeTabBounding.right > navScrollBounding.right) {\n          newOffset = currentOffset + activeTabBounding.right - navScrollBounding.right;\n        }\n        newOffset = Math.max(newOffset, 0);\n        this.navOffset = Math.min(newOffset, maxOffset);\n      },\n      update() {\n        if (!this.$refs.nav) return;\n        const sizeName = this.sizeName;\n        const navSize = this.$refs.nav[`offset${firstUpperCase(sizeName)}`];\n        const containerSize = this.$refs.navScroll[`offset${firstUpperCase(sizeName)}`];\n        const currentOffset = this.navOffset;\n        if (containerSize < navSize) {\n          const currentOffset = this.navOffset;\n          this.scrollable = this.scrollable || {};\n          this.scrollable.prev = currentOffset;\n          this.scrollable.next = currentOffset + containerSize < navSize;\n          if (navSize - currentOffset < containerSize) {\n            this.navOffset = navSize - containerSize;\n          }\n        } else {\n          this.scrollable = false;\n          if (currentOffset > 0) {\n            this.navOffset = 0;\n          }\n        }\n      },\n      changeTab(e) {\n        const keyCode = e.keyCode;\n        let nextIndex;\n        let currentIndex, tabList;\n        if ([37, 38, 39, 40].indexOf(keyCode) !== -1) { // 左右上下键更换tab\n          tabList = e.currentTarget.querySelectorAll('[role=tab]');\n          currentIndex = Array.prototype.indexOf.call(tabList, e.target);\n        } else {\n          return;\n        }\n        if (keyCode === 37 || keyCode === 38) { // left\n          if (currentIndex === 0) { // first\n            nextIndex = tabList.length - 1;\n          } else {\n            nextIndex = currentIndex - 1;\n          }\n        } else { // right\n          if (currentIndex < tabList.length - 1) { // not last\n            nextIndex = currentIndex + 1;\n          } else {\n            nextIndex = 0;\n          }\n        }\n        tabList[nextIndex].focus(); // 改变焦点元素\n        tabList[nextIndex].click(); // 选中下一个tab\n        this.setFocus();\n      },\n      setFocus() {\n        if (this.focusable) {\n          this.isFocus = true;\n        }\n      },\n      removeFocus() {\n        this.isFocus = false;\n      },\n      visibilityChangeHandler() {\n        const visibility = document.visibilityState;\n        if (visibility === 'hidden') {\n          this.focusable = false;\n        } else if (visibility === 'visible') {\n          setTimeout(() => {\n            this.focusable = true;\n          }, 50);\n        }\n      },\n      windowBlurHandler() {\n        this.focusable = false;\n      },\n      windowFocusHandler() {\n        setTimeout(() => {\n          this.focusable = true;\n        }, 50);\n      }\n    },\n    updated() {\n      this.update();\n    },\n    render(h) {\n      const {\n        type,\n        panes,\n        editable,\n        stretch,\n        onTabClick,\n        onTabRemove,\n        navStyle,\n        scrollable,\n        scrollNext,\n        scrollPrev,\n        changeTab,\n        setFocus,\n        removeFocus\n      } = this;\n      const scrollBtn = scrollable\n        ? [\n          <span class={['el-tabs__nav-prev', scrollable.prev ? '' : 'is-disabled']} on-click={scrollPrev}>{'<'}</span>,\n          <span class={['el-tabs__nav-next', scrollable.next ? '' : 'is-disabled']} on-click={scrollNext}>{'>'}</span>\n        ] : null;\n      const tabs = this._l(panes, (pane, index) => {\n        let tabName = pane.name || pane.index || index;\n        const closable = pane.isClosable || editable;\n        pane.index = `${index}`;\n        const btnClose = closable\n          ? <span class=\"el-icon-close\" on-click={(ev) => { onTabRemove(pane, ev); }}></span>\n          : null;\n        const tabLabelContent = pane.$slots.label || pane.label;\n        const tabindex = pane.active ? 0 : -1;\n        return (\n          <div\n            class={{\n              'el-tabs__item': true,\n              [`is-${ this.rootTabs.tabPosition }`]: true,\n              'is-active': pane.active,\n              'is-disabled': pane.disabled,\n              'is-closable': closable,\n              'is-focus': this.isFocus\n            }}\n            id={`tab-${tabName}`}\n            key={`tab-${tabName}`}\n            aria-controls={`pane-${tabName}`}\n            role=\"tab\"\n            aria-selected={ pane.active }\n            ref=\"tabs\"\n            tabindex={tabindex}\n            refInFor\n            on-focus={ ()=> { setFocus(); }}\n            on-blur ={ ()=> { removeFocus(); }}\n            on-click={(ev) => { removeFocus(); onTabClick(pane, tabName, ev); }}\n            on-keydown={(ev) => { if (closable && (ev.keyCode === 46 || ev.keyCode === 8)) { onTabRemove(pane, ev);} }}\n          >\n            {tabLabelContent}\n            {btnClose}\n          </div>\n        );\n      });\n      return (\n        <div class={['el-tabs__nav-wrap', scrollable ? 'is-scrollable' : '', `is-${ this.rootTabs.tabPosition }`]}>\n          {scrollBtn}\n          <div class={['el-tabs__nav-scroll']} ref=\"navScroll\">\n            <div\n              class={['el-tabs__nav', `is-${ this.rootTabs.tabPosition }`, stretch && ['top', 'bottom'].indexOf(this.rootTabs.tabPosition) !== -1 ? 'is-stretch' : '']}\n              ref=\"nav\"\n              style={navStyle}\n              role=\"tablist\"\n              on-keydown={ changeTab }\n            >\n              {!type ? <tab-bar tabs={panes}></tab-bar> : null}\n              {tabs}\n            </div>\n          </div>\n        </div>\n      );\n    },\n    mounted() {\n      addResizeListener(this.$el, this.update);\n      document.addEventListener('visibilitychange', this.visibilityChangeHandler);\n      window.addEventListener('blur', this.windowBlurHandler);\n      window.addEventListener('focus', this.windowFocusHandler);\n      setTimeout(() => {\n        this.scrollToActiveTab();\n      }, 0);\n    },\n    beforeDestroy() {\n      if (this.$el && this.update) removeResizeListener(this.$el, this.update);\n      document.removeEventListener('visibilitychange', this.visibilityChangeHandler);\n      window.removeEventListener('blur', this.windowBlurHandler);\n      window.removeEventListener('focus', this.windowFocusHandler);\n    }\n  };\n</script>\n"]}]}